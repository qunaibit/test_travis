language: java

git:
  depth: 10

matrix:
  include:
    - os: linux
      dist: trusty
      env:
        - ZIPPY_JDK_TYPE=STANDARD_LINUX
        - IS_GRAALJVM=FASLE
      jdk: oraclejdk8
      addons:
        apt:
          packages:
            - oracle-java8-installer
    - os: linux
      # sudo will force Travis-CI to build on a machine that has larger memory (required for building JVMCI)
      sudo: required
      dist: trusty
      env:
        - ZIPPY_JDK_TYPE=GRAALJVM_LINUX
        - JVMCI_VERSION="jvmci-0.46"
        - JVMCI_BASE_JDK8_TAR="openjdk-8u172"
        - JVMCI_BASE_JDK8="openjdk1.8.0_172"
        - BUILD_JVMCI=FALSE
        - IS_JDK9=FALSE
        - IS_GRAALJVM=TRUE
      jdk: oraclejdk8
      addons:
        apt:
          packages:
            - oracle-java8-installer
            - wget
    - os: osx
      env:
        - ZIPPY_JDK_TYPE=STANDARD_OSX
        - IS_GRAALJVM=FASLE
      osx_image: xcode9.1
    - os: osx
      env:
        - ZIPPY_JDK_TYPE=GRAALJVM_OSX
        - BUILD_JVMCI=TRUE
        - IS_JDK9=FALSE
        - IS_GRAALJVM=TRUE
      osx_image: xcode8.2
    # Future JDK9 with Graal
    # - os: linux
    #   dist: trusty
    #   env:
    #     - ZIPPY_JDK_TYPE=JVM9_LINUX
    #     - IS_JDK9=TRUE
    #     - IS_GRAALJVM=TRUE
    #   jdk: oraclejdk9
    #   addons:
    #     apt:
    #       packages:
    #         - oracle-java9-installer
    # - os: osx
    #   env:
    #     - ZIPPY_JDK_TYPE=JVM9_OSX
    #     - IS_JDK9=TRUE
    #     - IS_GRAALJVM=TRUE
    #   osx_image: xcode9.1

before_install:
  - echo $TRAVIS_OS_NAME
  - java -version
  - hg --version
  - python --version
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        brew update;
        brew tap caskroom/cask;

        if [ "$IS_JDK9" == "FALSE" ]; then
          if brew cask ls --versions "java" &>/dev/null; then
            echo "Uninstalling Java"
            brew cask uninstall java
          fi
          brew cask reinstall caskroom/versions/java8;
        else
          brew cask reinstall java;
        fi

        ls -l /Library/Java/JavaVirtualMachines/;
        export JAVA_HOME=$(/usr/libexec/java_home);
    fi
  - echo $JAVA_HOME
  - export DEFAULT_VM=server
  - git clone https://github.com/graalvm/mx.git ../mx
  - export PATH=$PWD/../mx:$PATH

install:
  - git clone https://github.com/securesystemslab/zippy.git ../zippy
  - if [ "$IS_GRAALJVM" == "TRUE" ]; then
  
      if [ "$IS_JDK9" == "FALSE" ]; then
      
        if [ "$BUILD_JVMCI" == "FALSE" ]; then
        
          JDK_TAR=${TRAVIS_BUILD_DIR}/../jdk.tar.gz;
          wget https://github.com/graalvm/openjdk8-jvmci-builder/releases/download/${JVMCI_VERSION}/${JVMCI_BASE_JDK8_TAR}-${JVMCI_VERSION}-linux-amd64.tar.gz -O ${JDK_TAR};
          tar -C ${TRAVIS_BUILD_DIR}/.. -xzf ${JDK_TAR};
          export JAVA_HOME=${TRAVIS_BUILD_DIR}/../${JVMCI_BASE_JDK8}-${JVMCI_VERSION};
          
        else
          echo "Building JDK with JVMCI"
          cd ..;
          hg clone http://hg.openjdk.java.net/graal/graal-jvmci-8;
          cd graal-jvmci-8;
          hg update ${JVMCI_VERSION};
          mx build;
          export JAVA_HOME=$(mx jdkhome);
          
        fi;

        mx jdkhome;
        
      fi;

      echo $JAVA_HOME;
      cd ../zippy;
      export DEFAULT_DYNAMIC_IMPORTS=truffle/compiler;
      export ZIPPY_MUST_USE_GRAAL=1;
      
    fi;


before_script:
  - cd ${TRAVIS_BUILD_DIR}/../zippy;
  - mx build

script:
  - mx -v junit-default
  - mx -v junit
  - mx -v gate --tags pythontest
  - mx -v gate --tags pythonbenchmarktest > .out_bt
  - echo "$(head -n35 < .out_bt)" && echo && echo && echo "......omitted......" && echo && echo && echo "$(tail -n18 < .out_bt)"

after_success:
  - rm .out_bt
  - echo "SUCCESSFUL build and test :)"

after_failure:
  - echo "FAILURE build and/or test :("
